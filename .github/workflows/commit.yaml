name: Trigger Airtable API on Commit
on:
  push:
    branches:
      - main

jobs:
  trigger-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Send Commit Info to Airtable
        env:
          AIRTABLE_API_URL: https://api.airtable.com/v0/appca9wvd0Q5x2Gu2/Commits
          AIRTABLE_API_KEY: ${{ secrets.AIRTABLE_SECRET }}
        run: |
          # Create a Python script to handle the data processing
          cat << 'EOF' > process_commit.py
          import json
          import subprocess
          import os

          # Get git diff
          diff_process = subprocess.run(['git', 'diff', 'HEAD^', 'HEAD'], 
                                     capture_output=True, text=True)
          code_changes = diff_process.stdout

          # Get commit details
          commit_date = subprocess.run(['git', 'log', '-1', '--pretty=format:%ad', '--date=iso'], 
                                    capture_output=True, text=True).stdout
          author_email = subprocess.run(['git', 'log', '-1', '--pretty=format:%ae'], 
                                     capture_output=True, text=True).stdout
          commit_message = subprocess.run(['git', 'log', '-1', '--pretty=format:%s'], 
                                       capture_output=True, text=True).stdout

          # Create the data structure
          data = {
              "records": [{
                  "fields": {
                      "Commit Date": commit_date,
                      "Repository URL": os.environ['GITHUB_SERVER_URL'] + '/' + os.environ['GITHUB_REPOSITORY'],
                      "Author Email": author_email,
                      "Repository Name": os.environ['GITHUB_REPOSITORY'],
                      "Commit Message": commit_message,
                      "Github Username": os.environ['GITHUB_ACTOR'],
                      "Code Committed": code_changes
                  }
              }]
          }

          # Write to file
          with open('commit_data.json', 'w') as f:
              json.dump(data, f)
          EOF

          # Run the Python script
          python process_commit.py

          # Send data to Airtable
          curl -X POST "$AIRTABLE_API_URL" \
            -H "Authorization: Bearer $AIRTABLE_API_KEY" \
            -H "Content-Type: application/json" \
            -d @commit_data.json
